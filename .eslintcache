[{"/Users/bradleywilson06/Documents/React-Portfolio/src/index.js":"1","/Users/bradleywilson06/Documents/React-Portfolio/src/App.js":"2","/Users/bradleywilson06/Documents/React-Portfolio/src/reportWebVitals.js":"3","/Users/bradleywilson06/Documents/React-Portfolio/src/components/Projects.js":"4","/Users/bradleywilson06/Documents/React-Portfolio/src/components/Animaton.js":"5","/Users/bradleywilson06/Documents/React-Portfolio/src/components/Navbar.js":"6"},{"size":546,"mtime":1611104748261,"results":"7","hashOfConfig":"8"},{"size":516,"mtime":1611104748259,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611104748261,"results":"10","hashOfConfig":"8"},{"size":258,"mtime":1611104748260,"results":"11","hashOfConfig":"8"},{"size":2960,"mtime":1611115942982,"results":"12","hashOfConfig":"8"},{"size":2342,"mtime":1611117407642,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1sgaq6f",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bradleywilson06/Documents/React-Portfolio/src/index.js",[],["29","30"],"/Users/bradleywilson06/Documents/React-Portfolio/src/App.js",[],"/Users/bradleywilson06/Documents/React-Portfolio/src/reportWebVitals.js",[],"/Users/bradleywilson06/Documents/React-Portfolio/src/components/Projects.js",["31"],"import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Projects extends Component {\n\n    render() {\n        return (\n            <div id=\"projects\">\n\n            </div>\n        );\n    }\n}\n\nexport default Projects;","/Users/bradleywilson06/Documents/React-Portfolio/src/components/Animaton.js",["32","33"],"import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Button from 'react-bootstrap/Button';\n\nlet scene, camera, renderer, line, starGeo, star, stars, innerline, lineColor, controls\nclass Animaton extends Component {\n\n    init = () => {\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1000 );\n    renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.body.prepend(renderer.domElement );\n    renderer.domElement.classList.add(\"canvas\")\n    const geometry = new THREE.BoxBufferGeometry( 2, 2, 2 );\n    const edges = new THREE.EdgesGeometry( geometry );\n    lineColor = 0xffffff\n    innerline = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0x4a7577 } ) );\n    line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: lineColor } ) );\n    scene.add( line );\n    scene.add( innerline )\n    starGeo = new THREE.Geometry();\n    for (let i = 0; i < 10000; i++){\n        star = new THREE.Vector3(\n            Math.random() * 600 - 300,\n            Math.random() * 600 - 300,\n            Math.random() * 600 - 300\n        )\n        star.velocity = 0;\n        star.acceleration = 0.001;\n        starGeo.vertices.push(star)\n    }\n    let sprite = new THREE.TextureLoader().load(\"star2.png\")\n    console.log(sprite)\n    let starMaterial = new THREE.PointsMaterial({\n        color: 0xaaaaaa,\n        size: 0.1,\n        map: sprite\n    })\n    stars = new THREE.Points(starGeo, starMaterial)\n    scene.add( stars )\n    camera.position.z = 5;\n    }\n\n    animate = () => {\n        starGeo.vertices.forEach((p) =>{\n            p.velocity += p.acceleration;\n            p.y -= p.velocity\n            if (p.y < -200){\n                p.y = 200;\n                p.velocity = 0\n            }\n        })\n        starGeo.verticesNeedUpdate = true;\n        requestAnimationFrame( this.animate );\n        line.rotation.x += 0.01;\n        line.rotation.y -= 0.01;\n        innerline.rotation.x -= 0.01;\n        innerline.rotation.y -= 0.01;\n        renderer.render( scene, camera );\n    };\n\n    onWindowResize = () => {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth - 15, window.innerHeight)\n    }\n\n    scrollToBottom = () => {\n        document.getElementById('nav').scrollIntoView({behavior: \"smooth\"})\n    }\n\n    componentDidMount(){\n    window.addEventListener(\"resize\", this.onWindowResize, false)\n    this.init();\n    this.animate();\n    }\n\n    render() {\n        return (\n        <div id=\"info-bottom\">\n        <Button onClick={this.scrollToBottom} className=\"view-more\" variant=\"outline-success\">View my work</Button>{' '}\n        </div>\n        );\n    }\n}\n\nexport default Animaton;","/Users/bradleywilson06/Documents/React-Portfolio/src/components/Navbar.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":17},{"ruleId":"38","severity":1,"message":"42","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":23},{"ruleId":"38","severity":1,"message":"43","line":6,"column":80,"nodeType":"40","messageId":"41","endLine":6,"endColumn":88},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'OrbitControls' is defined but never used.","'controls' is defined but never used.","no-global-assign","no-unsafe-negation"]