{"version":3,"sources":["components/Animaton.js","components/Projects.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["scene","camera","renderer","line","starGeo","star","stars","innerline","lineColor","controls","Animaton","state","windowHeight","init","THREE","window","innerWidth","innerHeight","antialias","OrbitControls","domElement","enableZoom","enablePan","setSize","document","body","prepend","classList","add","geometry","edges","color","position","y","i","Math","random","velocity","acceleration","vertices","push","sprite","load","console","log","starMaterial","size","map","z","animate","forEach","p","verticesNeedUpdate","requestAnimationFrame","rotation","x","render","onWindowResize","aspect","updateProjectionMatrix","setState","scrollToBottom","getElementById","scrollIntoView","behavior","addEventListener","this","id","className","Button","onClick","variant","Component","Projects","Navbar","isActive","h1className","ulclassName","canvasHeight","toggleNav","addClass","stickyNav","sticky","navbar","pageYOffset","clientHeight","remove","canvas","getElementsByClassName","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.028efc46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport Button from \"react-bootstrap/Button\";\n\nlet scene,\n  camera,\n  renderer,\n  line,\n  starGeo,\n  star,\n  stars,\n  innerline,\n  lineColor,\n  controls;\nclass Animaton extends Component {\n  state = {\n    windowHeight: 0,\n  };\n\n  init = () => {\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    renderer = new THREE.WebGLRenderer({ antialias: true });\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false;\n    controls.enablePan = false;\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.prepend(renderer.domElement);\n    renderer.domElement.classList.add(\"canvas\");\n    const geometry = new THREE.BoxBufferGeometry(1.5, 1.5, 1.5);\n    const edges = new THREE.EdgesGeometry(geometry);\n    lineColor = 0xffffff;\n    innerline = new THREE.LineSegments(\n      edges,\n      new THREE.LineBasicMaterial({ color: 0x4a7577 })\n    );\n    line = new THREE.LineSegments(\n      edges,\n      new THREE.LineBasicMaterial({ color: lineColor })\n    );\n    line.position.y = .5\n    innerline.position.y = .5\n    scene.add(line);\n    scene.add(innerline);\n    starGeo = new THREE.Geometry();\n    for (let i = 0; i < 10000; i++) {\n      star = new THREE.Vector3(\n        Math.random() * 600 - 300,\n        Math.random() * 600 - 300,\n        Math.random() * 600 - 300\n      );\n      star.velocity = 0;\n      star.acceleration = 0.001;\n      starGeo.vertices.push(star);\n    }\n    let sprite = new THREE.TextureLoader().load(\"star2.png\");\n    console.log(sprite);\n    let starMaterial = new THREE.PointsMaterial({\n      color: 0xaaaaaa,\n      size: 0.1,\n      map: sprite,\n    });\n    stars = new THREE.Points(starGeo, starMaterial);\n    scene.add(stars);\n    camera.position.z = 5;\n  };\n\n  animate = () => {\n    starGeo.vertices.forEach((p) => {\n      p.velocity += p.acceleration;\n      p.y -= p.velocity;\n      if (p.y < -200) {\n        p.y = 200;\n        p.velocity = 0;\n      }\n    });\n    starGeo.verticesNeedUpdate = true;\n    requestAnimationFrame(this.animate);\n    line.rotation.x += 0.01;\n    line.rotation.y -= 0.01;\n    innerline.rotation.x -= 0.01;\n    innerline.rotation.y -= 0.01;\n    renderer.render(scene, camera);\n  };\n\n  onWindowResize = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.setState({ windowHeight: window.innerWidth });\n  };\n\n  scrollToBottom = () => {\n    document.getElementById(\"nav\").scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.init();\n    this.animate();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"info-top\">\n          <h1 className=\"intro-top\">\n            Hello, I'm<span className=\"name\"> Bradley Wilson</span>\n          </h1>\n          <h1 className=\"intro-bottom\">I'm a full-stack web developer.</h1>\n        </div>\n        <div id=\"info-bottom\">\n          <Button\n            onClick={this.scrollToBottom}\n            className=\"view-more\"\n            variant=\"outline-success\"\n          >\n            About Me\n          </Button>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Animaton;\n","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Projects extends Component {\n\n    render() {\n        return (\n            <div id=\"projects\">\n\n            </div>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n    state = {\n        isActive: false,\n        h1className: \"\",\n        ulclassName: \"nav-links\",\n        canvasHeight: 0\n    }\n\n    toggleNav = () => {\n        this.setState({isActive: !this.state.isActive}, this.addClass)\n    }\n\n    addClass = () => {\n        if (this.state.isActive){\n            this.setState({h1className: \"nav-links-active\", ulclassName: \"nav-links nav-links-active-animation\"})\n        }else{\n            this.setState({h1className: \"\", ulclassName: \"nav-links\"})\n        }\n    }\n\n    stickyNav = (sticky, navbar) => {\n        if (window.pageYOffset >= sticky[0].clientHeight) {\n            navbar.classList.add(\"sticky\")\n          } else {\n            navbar.classList.remove(\"sticky\")\n        }\n    }\n\n    onWindowResize = (canvas) => {\n        this.setState({canvasHeight: canvas[0].clientHeight})\n    }\n\n    componentDidMount(){\n        let canvas = document.getElementsByClassName(\"canvas\")\n        let navbar = document.getElementById('nav')\n        this.setState({canvasHeight: canvas[0].clientHeight})\n        window.addEventListener(\"scroll\", () => this.stickyNav(canvas, navbar), false)\n        window.addEventListener(\"resize\", () => this.onWindowResize(canvas), false)\n    }\n    \n    render() {\n        console.log(this.state)\n        return (\n            <nav id=\"nav\">\n                <ul name=\"hello\" className={this.state.ulclassName}>\n                    <li><h1 className={this.state.h1className}>Home</h1></li>\n                    <li><h1 className={this.state.h1className}>About</h1></li>\n                    <li><h1 className={this.state.h1className}>Portfolio</h1></li>\n                    <li><h1 className={this.state.h1className}>Contact</h1></li>\n                </ul>\n                <div className=\"burger\" onClick={this.toggleNav}>\n                    <div className=\"line1\"></div>\n                    <div className=\"line2\"></div>\n                    <div className=\"line\"></div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import \"./App.css\";\nimport Animation from \"./components/Animaton\";\nimport Projects from \"./components/Projects\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div>\n      <Animation />\n      <Navbar />\n      <Projects />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}