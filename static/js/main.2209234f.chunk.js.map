{"version":3,"sources":["components/Animaton.js","components/Projects.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["scene","camera","renderer","line","starGeo","star","stars","innerline","lineColor","controls","Animaton","state","windowHeight","init","THREE","window","innerWidth","innerHeight","antialias","OrbitControls","domElement","enableZoom","enablePan","setSize","document","body","prepend","classList","add","vh","style","setProperty","geometry","edges","color","i","Math","random","velocity","acceleration","vertices","push","sprite","load","console","log","starMaterial","size","map","position","z","animate","forEach","p","y","verticesNeedUpdate","requestAnimationFrame","rotation","x","render","onWindowResize","aspect","updateProjectionMatrix","setState","documentElement","scrollToBottom","getElementById","scrollIntoView","behavior","addEventListener","this","id","className","Button","onClick","variant","Component","Projects","Navbar","isActive","h1className","ulclassName","canvasHeight","toggleNav","addClass","stickyNav","sticky","navbar","clientHeight","pageYOffset","remove","canvas","getElementsByClassName","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2209234f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport Button from \"react-bootstrap/Button\";\n\nlet scene,\n  camera,\n  renderer,\n  line,\n  starGeo,\n  star,\n  stars,\n  innerline,\n  lineColor,\n  controls;\nclass Animaton extends Component {\n  state = {\n    windowHeight: 0,\n  };\n\n  init = () => {\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    renderer = new THREE.WebGLRenderer({ antialias: true });\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false;\n    controls.enablePan = false;\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.prepend(renderer.domElement);\n    renderer.domElement.classList.add(\"canvas\");\n    let vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    renderer.domElement.style.setProperty('--vh', `${vh}px`)\n    const geometry = new THREE.BoxBufferGeometry(2, 2, 2);\n    const edges = new THREE.EdgesGeometry(geometry);\n    lineColor = 0xffffff;\n    innerline = new THREE.LineSegments(\n      edges,\n      new THREE.LineBasicMaterial({ color: 0x4a7577 })\n    );\n    line = new THREE.LineSegments(\n      edges,\n      new THREE.LineBasicMaterial({ color: lineColor })\n    );\n    scene.add(line);\n    scene.add(innerline);\n    starGeo = new THREE.Geometry();\n    for (let i = 0; i < 10000; i++) {\n      star = new THREE.Vector3(\n        Math.random() * 600 - 300,\n        Math.random() * 600 - 300,\n        Math.random() * 600 - 300\n      );\n      star.velocity = 0;\n      star.acceleration = 0.001;\n      starGeo.vertices.push(star);\n    }\n    let sprite = new THREE.TextureLoader().load(\"star2.png\");\n    console.log(sprite);\n    let starMaterial = new THREE.PointsMaterial({\n      color: 0xaaaaaa,\n      size: 0.1,\n      map: sprite,\n    });\n    stars = new THREE.Points(starGeo, starMaterial);\n    scene.add(stars);\n    camera.position.z = 5;\n  };\n\n  animate = () => {\n    starGeo.vertices.forEach((p) => {\n      p.velocity += p.acceleration;\n      p.y -= p.velocity;\n      if (p.y < -200) {\n        p.y = 200;\n        p.velocity = 0;\n      }\n    });\n    starGeo.verticesNeedUpdate = true;\n    requestAnimationFrame(this.animate);\n    line.rotation.x += 0.01;\n    line.rotation.y -= 0.01;\n    innerline.rotation.x -= 0.01;\n    innerline.rotation.y -= 0.01;\n    renderer.render(scene, camera);\n  };\n\n  onWindowResize = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.setState({ windowHeight: window.innerHeight });\n    let vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n  };\n\n  scrollToBottom = () => {\n    document.getElementById(\"nav\").scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.init();\n    this.animate();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"info-top\">\n          <h1 className=\"intro-top\">\n            Hello, I'm<span className=\"name\"> Bradley Wilson</span>\n          </h1>\n          <h1 className=\"intro-bottom\">I'm a full-stack web developer.</h1>\n        </div>\n        <div id=\"info-bottom\">\n          <Button\n            onClick={this.scrollToBottom}\n            className=\"view-more\"\n            variant=\"outline-success\"\n          >\n            View my work\n          </Button>{\" \"}\n          <h1>{this.state.windowHeight || window.innerHeight}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Animaton;\n","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Projects extends Component {\n\n    render() {\n        return (\n            <div id=\"projects\">\n\n            </div>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n    state = {\n        isActive: false,\n        h1className: \"\",\n        ulclassName: \"nav-links\",\n        canvasHeight: 0\n    }\n\n    toggleNav = () => {\n        this.setState({isActive: !this.state.isActive}, this.addClass)\n    }\n\n    addClass = () => {\n        if (this.state.isActive){\n            this.setState({h1className: \"nav-links-active\", ulclassName: \"nav-links nav-links-active-animation\"})\n        }else{\n            this.setState({h1className: \"\", ulclassName: \"nav-links\"})\n        }\n    }\n\n    stickyNav = (sticky, navbar) => {\n        this.setState({canvasHeight: sticky[0].clientHeight})\n        console.log(window.pageYOffset, this.state.canvasHeight)\n        if (window.pageYOffset >= sticky[0].clientHeight) {\n            navbar.classList.add(\"sticky\")\n          } else {\n            navbar.classList.remove(\"sticky\")\n        }\n        if (this.state.isActive && window.pageYOffset <= this.state.canvasHeight){\n            this.setState({isActive: false, h1className: \"\", ulclassName: \"nav-links\"})\n        }\n    }\n\n    onWindowResize = (canvas) => {\n        this.setState({canvasHeight: canvas[0].clientHeight})\n    }\n\n    componentDidMount(){\n        let canvas = document.getElementsByClassName(\"canvas\")\n        let navbar = document.getElementById('nav')\n        this.setState({canvasHeight: canvas[0].clientHeight})\n        window.addEventListener(\"scroll\", () => this.stickyNav(canvas, navbar), false)\n        window.addEventListener(\"resize\", () => this.onWindowResize(canvas), false)\n    }\n    \n    render() {\n        console.log(this.state)\n        return (\n            <nav id=\"nav\">\n                <ul name=\"hello\" className={this.state.ulclassName}>\n                    <li><h1 className={this.state.h1className}>Home</h1></li>\n                    <li><h1 className={this.state.h1className}>About</h1></li>\n                    <li><h1 className={this.state.h1className}>Portfolio</h1></li>\n                    <li><h1 className={this.state.h1className}>Contact</h1></li>\n                </ul>\n                <div className=\"burger\" onClick={this.toggleNav}>\n                    <div className=\"line1\"></div>\n                    <div className=\"line2\"></div>\n                    <div className=\"line\"></div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import \"./App.css\";\nimport Animation from \"./components/Animaton\";\nimport Projects from \"./components/Projects\";\nimport Navbar from \"./components/Navbar\";\nfunction App() {\n  return (\n    <div>\n      <Animation />\n      <Navbar />\n      <Projects />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}